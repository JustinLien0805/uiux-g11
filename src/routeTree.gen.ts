/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as HiFiImport } from './routes/hi-fi'
import { Route as LayoutImport } from './routes/_layout'
import { Route as IndexImport } from './routes/index'
import { Route as LayoutHw4Import } from './routes/_layout/hw4'
import { Route as LayoutHw3Import } from './routes/_layout/hw3'
import { Route as LayoutHw2Import } from './routes/_layout/hw2'
import { Route as LayoutHw1Import } from './routes/_layout/hw1'

// Create/Update Routes

const HiFiRoute = HiFiImport.update({
  path: '/hi-fi',
  getParentRoute: () => rootRoute,
} as any)

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const LayoutHw4Route = LayoutHw4Import.update({
  path: '/hw4',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutHw3Route = LayoutHw3Import.update({
  path: '/hw3',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutHw2Route = LayoutHw2Import.update({
  path: '/hw2',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutHw1Route = LayoutHw1Import.update({
  path: '/hw1',
  getParentRoute: () => LayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_layout': {
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/hi-fi': {
      preLoaderRoute: typeof HiFiImport
      parentRoute: typeof rootRoute
    }
    '/_layout/hw1': {
      preLoaderRoute: typeof LayoutHw1Import
      parentRoute: typeof LayoutImport
    }
    '/_layout/hw2': {
      preLoaderRoute: typeof LayoutHw2Import
      parentRoute: typeof LayoutImport
    }
    '/_layout/hw3': {
      preLoaderRoute: typeof LayoutHw3Import
      parentRoute: typeof LayoutImport
    }
    '/_layout/hw4': {
      preLoaderRoute: typeof LayoutHw4Import
      parentRoute: typeof LayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  LayoutRoute.addChildren([
    LayoutHw1Route,
    LayoutHw2Route,
    LayoutHw3Route,
    LayoutHw4Route,
  ]),
  HiFiRoute,
])

/* prettier-ignore-end */
